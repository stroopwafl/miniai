# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/miniai',
                'doc_host': 'https://stroopwafl.github.io',
                'git_url': 'https://github.com/stroopwafl/miniai',
                'lib_path': 'miniai'},
  'syms': { 'miniai.activations': { 'miniai.activations.ActivationStats': ('activations.html#activationstats', 'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.__init__': ( 'activations.html#activationstats.__init__',
                                                                                     'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.__iter__': ( 'activations.html#activationstats.__iter__',
                                                                                     'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.__len__': ( 'activations.html#activationstats.__len__',
                                                                                    'miniai/activations.py'),
                                    'miniai.activations.ActivationStats.before_fit': ( 'activations.html#activationstats.before_fit',
                                                                                       'miniai/activations.py'),
                                    'miniai.activations.ColorDim': ('activations.html#colordim', 'miniai/activations.py'),
                                    'miniai.activations.ColorDim.__init__': ('activations.html#colordim.__init__', 'miniai/activations.py'),
                                    'miniai.activations.ColorDim.after_fit': ( 'activations.html#colordim.after_fit',
                                                                               'miniai/activations.py'),
                                    'miniai.activations.ColorDim.plot': ('activations.html#colordim.plot', 'miniai/activations.py'),
                                    'miniai.activations.Hook': ('activations.html#hook', 'miniai/activations.py'),
                                    'miniai.activations.Hook.__del__': ('activations.html#hook.__del__', 'miniai/activations.py'),
                                    'miniai.activations.Hook.__init__': ('activations.html#hook.__init__', 'miniai/activations.py'),
                                    'miniai.activations.Hook.remove': ('activations.html#hook.remove', 'miniai/activations.py'),
                                    'miniai.activations.MeanStd': ('activations.html#meanstd', 'miniai/activations.py'),
                                    'miniai.activations.MeanStd.__init__': ('activations.html#meanstd.__init__', 'miniai/activations.py'),
                                    'miniai.activations.MeanStd.after_fit': ('activations.html#meanstd.after_fit', 'miniai/activations.py'),
                                    'miniai.activations.MeanStd.plot': ('activations.html#meanstd.plot', 'miniai/activations.py'),
                                    'miniai.activations.append_stats': ('activations.html#append_stats', 'miniai/activations.py'),
                                    'miniai.activations.get_hist': ('activations.html#get_hist', 'miniai/activations.py')},
            'miniai.conv': { 'miniai.conv.BottleneckBlock': ('conv.html#bottleneckblock', 'miniai/conv.py'),
                             'miniai.conv.BottleneckBlock.__init__': ('conv.html#bottleneckblock.__init__', 'miniai/conv.py'),
                             'miniai.conv.BottleneckBlock.forward': ('conv.html#bottleneckblock.forward', 'miniai/conv.py'),
                             'miniai.conv.ConvNormAct': ('conv.html#convnormact', 'miniai/conv.py'),
                             'miniai.conv.ConvNormAct.__init__': ('conv.html#convnormact.__init__', 'miniai/conv.py'),
                             'miniai.conv.ResnetNN': ('conv.html#resnetnn', 'miniai/conv.py'),
                             'miniai.conv.ResnetNN.__init__': ('conv.html#resnetnn.__init__', 'miniai/conv.py'),
                             'miniai.conv.ResnetNN.forward': ('conv.html#resnetnn.forward', 'miniai/conv.py'),
                             'miniai.conv.ResnetStage': ('conv.html#resnetstage', 'miniai/conv.py'),
                             'miniai.conv.ResnetStage.__init__': ('conv.html#resnetstage.__init__', 'miniai/conv.py'),
                             'miniai.conv.ResnetStem': ('conv.html#resnetstem', 'miniai/conv.py'),
                             'miniai.conv.ResnetStem.__init__': ('conv.html#resnetstem.__init__', 'miniai/conv.py')},
            'miniai.core': {'miniai.core.foo': ('core.html#foo', 'miniai/core.py')},
            'miniai.datasets': { 'miniai.datasets.DataLoaders': ('datasets.html#dataloaders', 'miniai/datasets.py'),
                                 'miniai.datasets.DataLoaders.__init__': ('datasets.html#dataloaders.__init__', 'miniai/datasets.py'),
                                 'miniai.datasets.DataLoaders.from_dd': ('datasets.html#dataloaders.from_dd', 'miniai/datasets.py'),
                                 'miniai.datasets.collate_dict': ('datasets.html#collate_dict', 'miniai/datasets.py'),
                                 'miniai.datasets.inplace': ('datasets.html#inplace', 'miniai/datasets.py')},
            'miniai.learner': { 'miniai.learner.BaseLearner': ('learner.html#baselearner', 'miniai/learner.py'),
                                'miniai.learner.BaseLearner.backward': ('learner.html#baselearner.backward', 'miniai/learner.py'),
                                'miniai.learner.BaseLearner.get_loss': ('learner.html#baselearner.get_loss', 'miniai/learner.py'),
                                'miniai.learner.BaseLearner.predict': ('learner.html#baselearner.predict', 'miniai/learner.py'),
                                'miniai.learner.BaseLearner.scheduler_step': ( 'learner.html#baselearner.scheduler_step',
                                                                               'miniai/learner.py'),
                                'miniai.learner.BaseLearner.step': ('learner.html#baselearner.step', 'miniai/learner.py'),
                                'miniai.learner.BaseLearner.zero_grad': ('learner.html#baselearner.zero_grad', 'miniai/learner.py'),
                                'miniai.learner.Callback': ('learner.html#callback', 'miniai/learner.py'),
                                'miniai.learner.CancelBatchException': ('learner.html#cancelbatchexception', 'miniai/learner.py'),
                                'miniai.learner.CancelEpochException': ('learner.html#cancelepochexception', 'miniai/learner.py'),
                                'miniai.learner.CancelFitException': ('learner.html#cancelfitexception', 'miniai/learner.py'),
                                'miniai.learner.CancelFull_EpochException': ('learner.html#cancelfull_epochexception', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB': ('learner.html#devicecb', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB.__init__': ('learner.html#devicecb.__init__', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB.before_batch': ('learner.html#devicecb.before_batch', 'miniai/learner.py'),
                                'miniai.learner.DeviceCB.before_fit': ('learner.html#devicecb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB': ('learner.html#lrfindercb', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.__init__': ('learner.html#lrfindercb.__init__', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.after_batch': ('learner.html#lrfindercb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.LRFinderCB.before_fit': ('learner.html#lrfindercb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.Learner': ('learner.html#learner', 'miniai/learner.py'),
                                'miniai.learner.Learner.__init__': ('learner.html#learner.__init__', 'miniai/learner.py'),
                                'miniai.learner.Learner._one_batch': ('learner.html#learner._one_batch', 'miniai/learner.py'),
                                'miniai.learner.Learner._one_epoch': ('learner.html#learner._one_epoch', 'miniai/learner.py'),
                                'miniai.learner.Learner.callback': ('learner.html#learner.callback', 'miniai/learner.py'),
                                'miniai.learner.Learner.callback_context': ('learner.html#learner.callback_context', 'miniai/learner.py'),
                                'miniai.learner.Learner.fit': ('learner.html#learner.fit', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB': ('learner.html#metricscb', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.__init__': ('learner.html#metricscb.__init__', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB._log': ('learner.html#metricscb._log', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.after_batch': ('learner.html#metricscb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.after_epoch': ('learner.html#metricscb.after_epoch', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.after_full_epoch': ( 'learner.html#metricscb.after_full_epoch',
                                                                               'miniai/learner.py'),
                                'miniai.learner.MetricsCB.before_epoch': ('learner.html#metricscb.before_epoch', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.before_fit': ('learner.html#metricscb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.MetricsCB.before_full_epoch': ( 'learner.html#metricscb.before_full_epoch',
                                                                                'miniai/learner.py'),
                                'miniai.learner.MomentumLearner': ('learner.html#momentumlearner', 'miniai/learner.py'),
                                'miniai.learner.MomentumLearner.__init__': ('learner.html#momentumlearner.__init__', 'miniai/learner.py'),
                                'miniai.learner.MomentumLearner.zero_grad': ('learner.html#momentumlearner.zero_grad', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB': ('learner.html#progresscb', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.__init__': ('learner.html#progresscb.__init__', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB._plot': ('learner.html#progresscb._plot', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.after_batch': ('learner.html#progresscb.after_batch', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.after_fit': ('learner.html#progresscb.after_fit', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.before_epoch': ('learner.html#progresscb.before_epoch', 'miniai/learner.py'),
                                'miniai.learner.ProgressCB.before_fit': ('learner.html#progresscb.before_fit', 'miniai/learner.py'),
                                'miniai.learner.get_device': ('learner.html#get_device', 'miniai/learner.py'),
                                'miniai.learner.to_cpu': ('learner.html#to_cpu', 'miniai/learner.py')},
            'miniai.test': {'miniai.test.test': ('test.html#test', 'miniai/test.py')}}}
